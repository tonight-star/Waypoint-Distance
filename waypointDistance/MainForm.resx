<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAFAAAAAAAAABHAAAA/wAAAP8AAABHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAAADQAAAEcAAAD/AAAA/wAA
        AEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPcAAABLAAAARwAA
        AP8AAAD/AAAARwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARgAA
        AA0AAABHAAAA/wAAAP8AAABHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAvAAAADAAAAEcAAAD/AAAA/wAAAEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAOEAAABeAAAARwAAAP8AAAD/AAAARwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAABwAAABHAAAA/wAAAP8AAABHAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /jw4D/gcIAPgBAHAA8AH8A/wH/w/+P////8=
</value>
  </data>
</root>